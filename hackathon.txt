

Alien Wallet
bsv Hackathon 2021

For this hackathon I continued the CLI wallet from hackathon3:

- Rewrite/Refactored most of the code
- Updated to use BSV 2.0 library
- Download and store block headers from P2P network
- Merkle Proofs support (classes written but they are not wired up)
- Mapi Functions
    - Fee quotes (downloads fee quotes but doesn't use them yet)
    - Transaction Submission
    - Merkle proof callbacks over SPV channels
- Extensibility
    - BaseWallet class can be extended, TxHandler and SpendHandlers
- P2OHPKH (Pay to Order Hash + Public Key Hash)
    - Uses the 'Extended Addressing' concept from Bitcoin Class
    - Customer and Vendor communicate over SPV Channels

Shopping with BSV
This transaction type relates to placing an order with a vendor along with payment.

Customer
The customer creates a new order object and pays the order total to a P2OHPKH 
script and broadcasts the transaction.

The script is generated from:
    - sha256(sha256(Order))
    - OrderPubKey, (VendorsPubKey + OrderNonce)
    - RefundPubKey, randomly generated by the customer

This script may be spend by providing:
    - sha256(Order)
    - OrderPubKey, and sign with OrderPrivKey (VendorsPrivKey + OrderNonce)
    or
    - RefundPubKey, and sign with RefundPrivKey

The customer sends the order details and payment transaction to the vendor over an 
SPV channel (or any other method).

The vendor checks the order and may accept or reject it.
If accepted, the vendor spends the P2POHPKH output.

If the vendor rejects the order, or the customer wishes to cancel the order,
the customer may spend the output using their refund key.

Example Script:

<signature>
<pubkey>
<orderSha256>
---
OP_SHA256
<orderDoubleSha256>
OP_EQUALVERIFY
OP_DUP
OP_DUP
OP_HASH160
<orderPKH>
OP_EQUAL
OP_SWAP
OP_HASH160
<refundPKH>
OP_EQUAL
OP_BOOLOR
OP_TRUE
OP_EQUALVERIFY
OP_CHECKSIG


